ubuntu_release: "focal"

#
# System tools
#
# go disk usage
gdu_version: "v5.12.0"

#
# Emacs
#

# emacs version (tag or commit) to build from source.
# for example, "emacs-27.1" or "86d8d76aa3"
emacs_rev: "b4336b2832cad22603f14f114d97abd95bdccc8c"
emacs_dir: "/opt/emacs-src"
emacs_compile_flags: "--with-native-compilation"
# source code version of GNU Global to build
gnu_global_version: "6.6.7"
# commit, branch or tag to use for https://github.com/universal-ctags/ctags
universal_ctags_version: "p5.9.20210815.0"

#
# Go
#
go_version: "1.16.7"
go_install_dir: "/opt/go-{{ go_version }}"
go_path: "~/dev/go"
delve_version: "v1.7.2"
go_dep_version: "0.5.0"
# Module version to use for the offifical gopls tool (e.g. "HEAD", a branch
# name, a tag name, or a commit hash).
gopls_version: "v0.7.5"
golangci_lint_version: "v1.43.0"
# gRPC
protoc_version: "3.17.3"
protoc_gen_go_version: "v1.26.0"
protoc_grpc_gen_go_version: "v1.1.0"
# go mod visualization
modgv_version: "v0.2.1"
grpcurl_version: "v1.8.2"

#
# JavaScript/NodeJS
#
nodejs_repo_version: "node_12.x"
typescript_lsp_server_version: "0.5.1"

#
# C/C++
#
clangd_version: "10.0.0"
ccls_version: "0.20190823.5"

#
# Python
#
dotnet_sdk_version: "3.1"
# python language server
pyright_ls_version: "1.1.180"
# alternative python language server
python_language_server_version: "0.2"
pyenv_version: "v2.1.0"
# python versions to install in pyenv
pyenv_py_versions: ["2.7.18", "3.9.2"]
# interpreters to set as default, globally
pyenv_global_versions: "3.9.2 2.7.18"
pyenv_virtualenv_version: "v1.1.5"
# debug adapter protocol (DAP) server for python
ptvsd_version: "4.3.2"
pytest_version: "6.2.5"
# miniconda is a minimal installer for conda: a package manager and environment
# management system originally developed for python data scientists.
# See: https://repo.anaconda.com/miniconda/.
miniconda_py_version: "py39"
miniconda_version: "4.10.3"
miniconda_checksum: "sha256:1ea2f885b4dbc3098662845560bc64271eb17085387a70c2ba3f29fff6f8d52f"

#
# Ruby
#
# lsp server
solargraph_version: "0.39.15"

#
# Rust
#
ripgrep_version: "13.0.0"

#
# Terraform
#
tf_version: "0.12.19"
tf_install_dir: "/opt/tf-{{ tf_version }}"
# language server version
tf_ls_version: "v0.0.11-beta2"

# Packer
packer_version: "1.5.1"

eclipse_version: "2020-12"
eclipse_install_dir: "/opt/eclipse-{{ eclipse_version }}"

#
# Kubernetes
#
kubectl_version: "1.16.3"
helm2_version: "2.16.1"
helm2_install_dir: "/opt/helm2-{{ helm2_version }}"
helm3_version: "3.6.3"
helm3_install_dir: "/opt/helm3-{{ helm3_version }}"
helm_secrets_version: "v2.0.2"
helm_diff_version: "v3.1.3"
minikube_version: "1.13.0"
# kind: kubernetes-in-docker
kind_version: "v0.11.1"
clusterawsadm_version: "0.4.2"
kustomize_version: "3.3.0"
helmfile_version: "0.140.0"
k9s_version: "v0.25.8"

# tinyproxy tag/commit to build
tinyproxy_version: "17e19a67cfd2af4d05d50981d3a09a46bec684ac"

#
# backup
#
# pip packages needed to install duplicity
duplicity_packages: "duplicity>0.8,PyDrive>1.3,boto3>1.12,future"

#
# folder encryption
#
# be careful updating this. check the changelog to see if it risks breaking
# any encrypted folders in use.
fscrypt_version: "v0.3.0"
fscrypt_repo_dir: "/opt/fscrypt"

#
# email
#
# commit/tag of mu to build
mu_dir: "/opt/mu-src"
mu_rev: "v1.4.15"
