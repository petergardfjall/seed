#
# Go
#

- name: "go: check current version"
  command: /opt/bin/go version
  ignore_errors: yes
  changed_when: False # read-only: won't change machine state
  register: go_v
  tags:
    - Dev
    - go

- name: "go: create {{ go_install_dir }}"
  file:
    path: "{{ go_install_dir }}"
    state: directory
  tags:
    - Dev
    - go

- name: "go: download"
  unarchive:
    src: "https://dl.google.com/go/go{{ go_version }}.linux-amd64.tar.gz"
    dest: "{{ go_install_dir }}/"
    extra_opts: ["--strip-components=1"]
    remote_src: yes
  when: (go_v is failed) or (not go_version in go_v.stdout)
  tags:
    - Dev
    - go

- name: "go: /opt/go -> {{ go_install_dir }} symlink"
  file:
    src: "{{ go_install_dir }}"
    dest: "/opt/go"
    force: yes
    state: link
  tags:
    - Dev
    - go

- name: "go: /opt/bin/go symlink"
  file:
    src: "{{ go_install_dir }}/bin/go"
    dest: "/opt/bin/go"
    force: yes
    state: link
  when: (go_v is failed) or (not go_version in go_v.stdout)
  tags:
    - Dev
    - go

- name: "go: create {{ go_path_dir }}"
  vars:
    go_path_dir: "{{ go_path | expanduser }}"
  become: no # not as root
  file:
    path: "{{ go_path_dir }}"
    state: directory
  tags:
    - Dev
    - go

#
# Go tools
#

# Go language server.
- name: "gopls: install"
  become: no # not as root
  command: "/opt/bin/go install {{ item }}"
  changed_when: False # don't view as changes in end result
  loop:
    - "golang.org/x/tools/gopls@{{ gopls_version }}"
  tags:
    - Dev
    - go
    - gopls

# Debugger.
- name: "delve: install"
  become: no # not as root
  command: "/opt/bin/go install {{ item }}"
  changed_when: False # don't view as changes in end result
  loop:
    - "github.com/go-delve/delve/cmd/dlv@{{ delve_version }}"
  tags:
    - Dev
    - go
    - delve

- name: "golangci-lint: install"
  become: no # not as root
  command: "/opt/bin/go install {{ item }}"
  changed_when: False # don't view as changes in end result
  loop:
    - "github.com/golangci/golangci-lint/cmd/golangci-lint@{{ golangci_lint_version }}"
  tags:
    - Dev
    - go
    - golangci-lint

- name: "go-swagger: install"
  become: no # not as root
  command: "/opt/bin/go install {{ item }}"
  changed_when: False # don't view as changes in end result
  loop:
    - "github.com/go-swagger/go-swagger/cmd/swagger@{{ go_swagger_version }}"
  tags:
    - Dev
    - go
    - go-swagger

# OpenAPI code generator.
- name: "ogen: install"
  become: no # not as root
  command: "/opt/bin/go install {{ item }}"
  changed_when: False # don't view as changes in end result
  loop:
    - "github.com/ogen-go/ogen/cmd/ogen@{{ ogen_version }}"
  tags:
    - Dev
    - go
    - openapi
    - ogen

#
# Protobuf compiler.
#
- name: "protoc: check current version"
  shell: protoc --version | head -1
  ignore_errors: yes
  changed_when: False # read-only: won't change machine state
  register: protoc_v
  tags:
    - Dev
    - go
    - protoc

- name: "protoc: download"
  become: no # not as root
  unarchive:
    src: "https://github.com/protocolbuffers/protobuf/releases/download/v{{ protoc_version }}/protoc-{{ protoc_version }}-linux-x86_64.zip"
    dest: "{{ '~/.local' | expanduser }}"
    remote_src: yes
  when: (protoc_v is failed) or (not protoc_version in protoc_v.stdout)
  tags:
    - Dev
    - go
    - protoc

# Installs protoc compiler plugins for Go.
- name: "go: protoc modules"
  become: no # not as root
  command: "/opt/bin/go install {{ item }}"
  changed_when: False # don't view as changes in end result
  loop:
    - "google.golang.org/protobuf/cmd/protoc-gen-go@{{ protoc_gen_go_version }}"
    - "google.golang.org/grpc/cmd/protoc-gen-go-grpc@{{ protoc_grpc_gen_go_version }}"
  tags:
    - Dev
    - go
    - protoc

# Go REPL (Read Eval Print Loop)
- name: "gomacro: install"
  become: no # not as root
  command: "/opt/bin/go install {{ item }}"
  changed_when: False # don't view as changes in end result
  loop:
    - "github.com/cosmos72/gomacro@{{ gomacro_version }}"
  tags:
    - Dev
    - go
    - gomacro

# A server for showing Go source code documentation.
# NOTE: old (deprecated), prefer pkgsite.
#
#   godoc -http=:8080
#   # Enable playground
#   godoc -http=:8080 -play
#
- name: "godoc: install"
  become: no # not as root
  command: "/opt/bin/go install {{ item }}"
  changed_when: False # don't view as changes in end result
  loop:
    - "golang.org/x/tools/cmd/godoc@{{ godoc_version }}"
  tags:
    - Dev
    - go
    - godoc

# A server for showing Go source code documentation:
#
#   cd <code-root>
#   pkgsite -http=:8080
#
- name: "pkgsite: install"
  become: no # not as root
  command: "/opt/bin/go install {{ item }}"
  changed_when: False # don't view as changes in end result
  loop:
    - "golang.org/x/pkgsite/cmd/pkgsite@{{ pkgsite_version }}"
  tags:
    - Dev
    - go
    - pkgsite
