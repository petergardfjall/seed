#
# desktop-environment, window manager
#
- name: "xfce: install {{ packages }}"
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - xfce4
    - xfce4-goodies
    - fonts-dejavu
    - fonts-noto
    - libnotify-bin
    - greybird-gtk-theme
    - xfce4-pulseaudio-plugin

- name: "xfce: check session save-on-exit property"
  become: no   # not as root
  shell: xfconf-query -c xfce4-session -p /general/SaveOnExit
  register: save_on_exit
  ignore_errors: yes
  changed_when: False  # read-only: won't change machine state

- name: "xfce: disable session save-on-exit when not set"
  become: no   # not as root
  shell: xfconf-query -c xfce4-session -p /general/SaveOnExit -n -t bool -s false
  changed_when: False  # don't appear changed
  when: save_on_exit.stdout == ""

- name: "xfce: disable session save-on-exit when true"
  become: no   # not as root
  shell: xfconf-query -c xfce4-session -p /general/SaveOnExit -t bool -s false
  when: save_on_exit.stdout == "true"

- name: "xfce: clear any existing sessions"
  file:
    # note: trailing slash => remove contents, not directory itself
    path: "{{ '~/.cache/sessions/' | expanduser }}"
    state: absent
  changed_when: False  # don't appear changed

- name: "xfce: prevent from saving sessions"
  become: no   # not as root
  file:
    path: "{{ '~/.cache/sessions' | expanduser }}"
    state: directory
    mode: 0500
  changed_when: False  # don't appear changed

- name: "remove ubuntu-desktop (if installed)"
  apt:
    name: ubuntu-desktop
    state: absent
    purge: yes
    autoremove: yes

- name: "apt: clean unneeded packages"
  apt:
    autoremove: true

- name: "xfce: setup-xfce4.sh"
  become: no   # not as root
  shell: "~/dotfiles/setup-xfce4.sh"
  changed_when: False  # don't appear changed

- name: "skype: check if installed"
  shell: "snap list skype"
  ignore_errors: yes
  changed_when: False  # read-only: won't change machine state
  register: check
  tags: spotify

- name: "skype: install"
  shell: snap install skype --classic
  when: check.failed
  tags: spotify

- name: "slack: check if installed"
  shell: "snap list slack"
  ignore_errors: yes
  changed_when: False  # read-only: won't change machine state
  register: check
  tags: slack

- name: "slack: install"
  shell: snap install slack --classic
  when: check.failed
  tags: slack

- name: "vlc: install"
  apt:
    name: "{{ packages }}"
    state: latest
    install_recommends: yes
  vars:
    packages:
    - vlc

- name: "spotify: check if installed"
  shell: "snap list spotify"
  ignore_errors: yes
  changed_when: False  # read-only: won't change machine state
  register: check
  tags: spotify

- name: "spotify: install"
  shell: "snap install spotify"
  when: check.failed
  tags: spotify
