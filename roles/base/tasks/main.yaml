- name: "create /opt/bin"
  file:
    path: /opt/bin
    state: directory
    mode: 0755

- name: "create /scratch"
  file:
    path: /scratch
    state: directory
    mode: 0777

- name: "install basic tools: {{ packages }}"
  apt:
    name: "{{ packages }}"
    state: latest
    install_recommends: yes
  vars:
    packages:
      # shell
      - bash-completion
      - tmux
      # shell utilities
      - pwgen
      - tree
      - jq
      - pass
      - dos2unix
      # desktop/X
      - wmctrl
      - xdotool
      - xsel
      # filesystem
      - gparted
      - sshfs
      # files
      - hexyl # similar to hexdump but with nice color coding
      # monitoring
      - htop
      - iftop
      - bmon
      - iperf
      - sysstat
      - powertop
      - httperf
      # network
      - nmap
      - tinyproxy # light-weight HTTP/HTTPS proxy daemon
      # graphics/media
      - inkscape
      - gimp
      - gpick
      - gnuplot
      - libheif-examples # heif-convert: .heif -> .jpg conversion
      - scrot # screenshot
      - gifsicle # tool to create/edit/view info on GIF images/animations
      - jhead # command-line tool to extract JPEG metadata
      # communication
      - openssh-server
      - openssh-client
      # version control
      - git
      - gitg
      - tig
      - subversion
      - mercurial
      - meld
      # markdown rendering
      - markdown
      # gpg password entry in text-mode
      - pinentry-tty
      - pinentry-curses
      # diagrams
      - dia
      - graphviz
      # webcam
      - cheese
  tags:
    - basictools

- name: "build tools: {{ packages }}"
  apt:
    name: "{{ packages }}"
    state: latest
    install_recommends: yes
  vars:
    # build tools that may be needed to build other base tools from source
    packages:
      - make
      - pkg-config
      - autoconf
      - automake
      - build-essential
      - gcc
      - gettext
  tags:
    - buildtools

- name: "~/inputrc: emacs-like copy/paste in terminal"
  become: no
  copy:
    src: files/inputrc
    dest: "{{ '~/.inputrc' | expanduser }}"
    mode: 0644
  tags:
    - terminal

#
# Google Chrome
#

- name: "google chrome: install"
  apt:
    name: google-chrome-stable
    state: latest
    install_recommends: yes
  tags:
    - chrome

#
# locale
#

- name: "generate swedish locale"
  shell: locale-gen sv_SE
  changed_when: False # don't appear changed

- name: "apt: clean unneeded packages"
  apt:
    autoremove: true

#
# dot files
#

- name: "git: checkout ~/dotfiles"
  become: no # not as root
  git:
    repo: "https://github.com/petergardfjall/dotfiles.git"
    recursive: yes
    dest: "{{ '~/dotfiles' | expanduser }}"
    clone: yes
    update: no
  tags:
    - dotfiles

- name: "git: set ssh remote for ~/dotfiles"
  become: no
  git_config:
    name: remote.origin.url
    value: git@github.com:petergardfjall/dotfiles.git
    scope: local
    repo: "{{ '~/dotfiles' | expanduser }}"
  tags:
    - dotfiles

- name: "vscode: create config dir"
  become: no # not as root
  file:
    path: "{{ '~/.config/Code/User' | expanduser }}"
    state: directory
  tags:
    - dotfiles

- name: "vscode: symlink for settings.json"
  become: no # not as root
  file:
    src: "{{ '~/dotfiles/vscode/settings.json' | expanduser }}"
    dest: "{{ '~/.config/Code/User/settings.json' | expanduser }}"
    state: link
  tags:
    - dotfiles

- name: "vscode: symlink for keybindings.json"
  become: no # not as root
  file:
    src: "{{ '~/dotfiles/vscode/keybindings.json' | expanduser }}"
    dest: "{{ '~/.config/Code/User/keybindings.json' | expanduser }}"
    state: link
  tags:
    - dotfiles

- name: ".bashrc: extra modules"
  become: no # not as root
  blockinfile:
    path: "{{ '~/.bashrc' | expanduser }}"
    block: |
      #
      # source additional configuration modules
      #
      source ~/dotfiles/bash.includes
  tags:
    - dotfiles

- name: ".profile: extra modules"
  become: no # not as root
  blockinfile:
    path: "{{ '~/.profile' | expanduser }}"
    block: |
      #
      # source additional configuration modules
      #
      source ~/dotfiles/bash.includes
  tags:
    - dotfiles

- name: "git: checkout ~/bin/scripts"
  become: no # not as root
  git:
    repo: "https://github.com/petergardfjall/scripts"
    recursive: yes
    dest: "{{ '~/bin/scripts' | expanduser }}"
    clone: yes
    update: no
  tags:
    - dotfiles

- name: "git: set ssh remote for ~/bin/scripts"
  become: no
  git_config:
    name: remote.origin.url
    value: git@github.com:petergardfjall/scripts.git
    scope: local
    repo: "{{ '~/bin/scripts' | expanduser }}"
  tags:
    - dotfiles
